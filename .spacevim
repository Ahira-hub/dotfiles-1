let &t_SI = "\e[6 q"
let &t_EI = "\e[2 q"

let mapleader = "\<Space>"
set nocompatible
set encoding=utf8
set guifont=Monoisome\ 12
set t_Co=256
set laststatus=2
set viminfo=""
set noswapfile
set autoread

filetype plugin on
syntax on
filetype on
filetype indent on
filetype plugin on
filetype plugin indent on

set showbreak=↪\
set listchars=tab:→\ ,extends:›,precedes:‹,nbsp:␣,trail:·
set list
set ruler
set showcmd " display incomplete commands
set showmode " display current modes<Paste>
set display+=lastline
set smartindent
set smarttab
set shiftround
set hlsearch
set incsearch
set ignorecase smartcase
set smartcase
set expandtab
set ttyfast
set nobackup
set noswapfile
set nowritebackup
set iskeyword-=_,.,=,-,:,
set foldmethod=indent

set completeopt=longest,menu
set wildmenu " show a navigable menu for tab completion
set wildmode=longest,list,full
set wildignore=*.o,*~,*.pyc,*.class,*.so,*.zip
set encoding=utf-8
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
set backspace=indent,eol,start  " make that backspace key work the way it should
set whichwrap+=<,>,h,l
set nowrap                            " Don't wrap long lines
set listchars=extends:→               " Show arrow if line continues rightwards
set listchars+=precedes:← " Show arrow if line continues leftwards

set scrolloff=5       " Leave 5 lines of buffer when scrolling
set sidescrolloff=10 " Leave 10 characters of horizontal buffer when scrolling
set cursorline
set cursorcolumn

function! UserInit()
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
  Plug 'w0rp/ale'
  Plug 'Shougo/neosnippet.vim'
  Plug 'Shougo/neosnippet-snippets'
  Plug 'junegunn/seoul256.vim'
  Plug 'vim-airline/vim-airline-themes'
  Plug 'vim-airline/vim-airline'
  Plug 'edkolev/promptline.vim'
  Plug 'scrooloose/nerdtree'
  Plug 'ryanoasis/vim-devicons'
  Plug 'scrooloose/syntastic'
  Plug 'dbgx/lldb.nvim'
  Plug 'Yggdroot/indentLine'
  Plug 'tpope/vim-surround'
  Plug 'airblade/vim-gitgutter'
  Plug 'tpope/vim-fugitive'
  Plug 'easymotion/vim-easymotion'
  Plug 'haya14busa/incsearch.vim'
  Plug 'raimondi/delimitmate'
  Plug 'sheerun/vim-polyglot'
  Plug 'francoiscabrol/ranger.vim'
  Plug 'rbgrouleff/bclose.vim'

  Plug 'othree/xml.vim'
  Plug 'junegunn/goyo.vim'
  Plug 'powerman/vim-plugin-viewdoc'
  Plug 'rhysd/vim-grammarous'
  Plug 'reedes/vim-pencil'
  Plug 'godlygeek/tabular'
  Plug 'plasticboy/vim-markdown'
  Plug '907th/vim-auto-save'
  Plug '~/.fzf'
  Plug 'dylanaraps/wal.vim'
endfunction

let spacevim_plug_home = '~/.vim/plugged'
let g:spacevim_layers = ['fzf', 'unite', 'better-defaults', 'which-key', 'airline']
if g:spacevim_gui
  Layer 'airline'
endif

function! UserConfig()
  "colorscheme wal
  hi CursorLine ctermfg=15 ctermbg=235 cterm=bold
  hi CursorColumn ctermfg=15 ctermbg=235 cterm=bold
  let g:airline_powerline_fonts=1
  let g:airline_theme='jellybeans'
  if g:spacevim_tmux
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  endif
  hi Normal ctermbg=0
  hi LineNr ctermbg=0
endfunction

function! s:goyo_enter()
  silent !tmux set status off
  silent !tmux list-panes -F '\#F' | grep -q Z || tmux resize-pane -Z
  set noshowmode
  set noshowcmd
  set norelativenumber
  set nonumber
  :SoftPencil
  hi Normal ctermbg=0 ctermfg=15
  hi LineNr ctermbg=0
endfunction
autocmd! User GoyoEnter nested call <SID>goyo_enter()
function! s:goyo_leave()
  silent !tmux set status on
  silent !tmux list-panes -F '\#F' | grep -q Z && tmux resize-pane -Z
  set showmode
  set showcmd
  set number
  set relativenumber
  :NoPencil
  hi Normal ctermbg=0 ctermfg=15
  hi LineNr ctermbg=0
endfunction
autocmd! User GoyoLeave nested call <SID>goyo_leave()

let g:deoplete#auto_complete_start_length = 1
let g:deoplete#enable_at_startup = 1
let g:deoplete#enable_smart_case = 1
let g:incsearch#auto_nohlsearch = 1
let g:goyo_width = 90

map <leader>g :Goyo<CR>
map <leader>n :NERDTreeToggle<CR>
map s  <Plug>(easymotion-overwin-w)
map / <Plug>(incsearch-forward)
map <C-f> :FZF<CR>
noremap <C-End>   :bn<CR>
noremap <C-Home>   :bp<CR>
